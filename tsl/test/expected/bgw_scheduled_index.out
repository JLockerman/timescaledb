-- This file and its contents are licensed under the Timescale License.
-- Please see the included NOTICE for copyright information and
-- LICENSE-TIMESCALE for a copy of the license.
--
-- Setup
--
\c :TEST_DBNAME :ROLE_SUPERUSER
CREATE OR REPLACE FUNCTION ts_bgw_db_scheduler_test_run_and_wait_for_scheduler_finish(timeout INT = -1, mock_start_time INT = 0) RETURNS VOID
AS :MODULE_PATHNAME LANGUAGE C VOLATILE;
CREATE OR REPLACE FUNCTION ts_bgw_db_scheduler_test_run(timeout INT = -1, mock_start_time INT = 0) RETURNS VOID
AS :MODULE_PATHNAME LANGUAGE C VOLATILE;
CREATE OR REPLACE FUNCTION ts_bgw_db_scheduler_test_wait_for_scheduler_finish() RETURNS VOID
AS :MODULE_PATHNAME LANGUAGE C VOLATILE;
CREATE OR REPLACE FUNCTION ts_bgw_params_create() RETURNS VOID
AS :MODULE_PATHNAME LANGUAGE C VOLATILE;
CREATE OR REPLACE FUNCTION ts_bgw_params_destroy() RETURNS VOID
AS :MODULE_PATHNAME LANGUAGE C VOLATILE;
CREATE OR REPLACE FUNCTION ts_bgw_params_reset_time(set_time BIGINT = 0, wait BOOLEAN = false) RETURNS VOID
AS :MODULE_PATHNAME LANGUAGE C VOLATILE;
\set WAIT_ON_JOB 0
\set IMMEDIATELY_SET_UNTIL 1
\set WAIT_FOR_OTHER_TO_ADVANCE 2
-- Remove any default jobs, e.g., telemetry
SELECT _timescaledb_internal.stop_background_workers();
 stop_background_workers 
-------------------------
 t
(1 row)

DELETE FROM _timescaledb_config.bgw_job WHERE TRUE;
TRUNCATE _timescaledb_internal.bgw_job_stat;
SELECT _timescaledb_internal.start_background_workers();
 start_background_workers 
--------------------------
 t
(1 row)

\c :TEST_DBNAME :ROLE_DEFAULT_PERM_USER
CREATE TABLE public.bgw_log(
    msg_no INT,
    mock_time BIGINT,
    application_name TEXT,
    msg TEXT
);
CREATE VIEW sorted_bgw_log AS
    SELECT * FROM bgw_log ORDER BY mock_time, application_name COLLATE "C", msg_no;
CREATE TABLE public.bgw_dsm_handle_store(
    handle BIGINT
);
INSERT INTO public.bgw_dsm_handle_store VALUES (0);
SELECT ts_bgw_params_create();
 ts_bgw_params_create 
----------------------
 
(1 row)

SELECT * FROM _timescaledb_config.bgw_job;
 id | application_name | job_type | schedule_interval | max_runtime | max_retries | retry_period 
----+------------------+----------+-------------------+-------------+-------------+--------------
(0 rows)

SELECT * FROM timescaledb_information.drop_chunks_policies;
 hypertable | older_than | cascade | job_id | schedule_interval | max_runtime | max_retries | retry_period | cascade_to_materializations 
------------+------------+---------+--------+-------------------+-------------+-------------+--------------+-----------------------------
(0 rows)

SELECT * FROM timescaledb_information.scheduled_index_policies;
 hypertable | hypertable_index_name | job_id | schedule_interval | max_runtime | max_retries | retry_period 
------------+-----------------------+--------+-------------------+-------------+-------------+--------------
(0 rows)

SELECT * FROM timescaledb_information.policy_stats;
 hypertable | job_id | job_type | last_run_success | last_finish | last_start | next_start | total_runs | total_failures 
------------+--------+----------+------------------+-------------+------------+------------+------------+----------------
(0 rows)

\c :TEST_DBNAME :ROLE_DEFAULT_PERM_USER
---------------------------------
-- test scheduled_index policy --
---------------------------------
CREATE TABLE test_scheduled_index_table(time int, chunk_id int);
SELECT create_hypertable('test_scheduled_index_table', 'time', chunk_time_interval => 1, create_default_indexes => false);
NOTICE:  adding not-null constraint to column "time"
            create_hypertable            
-----------------------------------------
 (1,public,test_scheduled_index_table,t)
(1 row)

-- no default index
SELECT * FROM test.show_indexes('test_scheduled_index_table');
 Index | Columns | Expr | Unique | Primary | Exclusion | Tablespace 
-------+---------+------+--------+---------+-----------+------------
(0 rows)

SELECT * FROM test.show_indexesp('_timescaledb_internal._hyper%_chunk');
 Table | Index | Columns | Expr | Unique | Primary | Exclusion | Tablespace 
-------+-------+---------+------+--------+---------+-----------+------------
(0 rows)

-- index only on parent
SELECT * FROM test.show_indexes('test_scheduled_index_table');
 Index | Columns | Expr | Unique | Primary | Exclusion | Tablespace 
-------+---------+------+--------+---------+-----------+------------
(0 rows)

SELECT * FROM test.show_indexesp('_timescaledb_internal._hyper%_chunk');
 Table | Index | Columns | Expr | Unique | Primary | Exclusion | Tablespace 
-------+-------+---------+------+--------+---------+-----------+------------
(0 rows)

-- These inserts should create 5 different chunks
INSERT INTO test_scheduled_index_table VALUES (1, 1);
INSERT INTO test_scheduled_index_table VALUES (2, 2);
CREATE INDEX ON test_scheduled_index_table(time) WITH (timescaledb.scheduled);
WARNING:  Timescale License expired
INSERT INTO test_scheduled_index_table VALUES (3, 3);
INSERT INTO test_scheduled_index_table VALUES (4, 4);
INSERT INTO test_scheduled_index_table VALUES (5, 5);
SELECT COUNT(*) FROM _timescaledb_catalog.chunk as c, _timescaledb_catalog.hypertable as ht where c.hypertable_id = ht.id and ht.table_name='test_scheduled_index_table';
 count 
-------
     5
(1 row)

SELECT * FROM _timescaledb_catalog.optional_index_info;
        hypertable_index_name        | is_scheduled 
-------------------------------------+--------------
 test_scheduled_index_table_time_idx | t
(1 row)

-- policy was created
SELECT * FROM _timescaledb_config.bgw_policy_scheduled_index;
 job_id | hypertable_id |        hypertable_index_name        
--------+---------------+-------------------------------------
   1000 |             1 | test_scheduled_index_table_time_idx
(1 row)

SELECT job_id AS scheduled_index_job_id FROM _timescaledb_config.bgw_policy_scheduled_index LIMIT 1 \gset
-- job was created
SELECT * FROM _timescaledb_config.bgw_job where id=:scheduled_index_job_id;
  id  |       application_name        |    job_type     | schedule_interval | max_runtime | max_retries | retry_period 
------+-------------------------------+-----------------+-------------------+-------------+-------------+--------------
 1000 | ScheduledIndex Background Job | scheduled_index | @ 4 days          | @ 0         |          -1 | @ 1 day
(1 row)

-- no stats
SELECT job_id, next_start, last_finish as until_next, last_run_success, total_runs, total_successes, total_failures, total_crashes
    FROM _timescaledb_internal.bgw_job_stat
    ORDER BY job_id;
 job_id | next_start | until_next | last_run_success | total_runs | total_successes | total_failures | total_crashes 
--------+------------+------------+------------------+------------+-----------------+----------------+---------------
(0 rows)

-- index only on parent
SELECT * FROM test.show_indexes('test_scheduled_index_table');
                Index                | Columns | Expr | Unique | Primary | Exclusion | Tablespace 
-------------------------------------+---------+------+--------+---------+-----------+------------
 test_scheduled_index_table_time_idx | {time}  |      | f      | f       | f         | 
(1 row)

SELECT * FROM test.show_indexesp('_timescaledb_internal._hyper%_chunk');
 Table | Index | Columns | Expr | Unique | Primary | Exclusion | Tablespace 
-------+-------+---------+------+--------+---------+-----------+------------
(0 rows)

-- run first time
SELECT ts_bgw_db_scheduler_test_run_and_wait_for_scheduler_finish(25);
 ts_bgw_db_scheduler_test_run_and_wait_for_scheduler_finish 
------------------------------------------------------------
 
(1 row)

SELECT * FROM sorted_bgw_log;
 msg_no | mock_time | application_name |                    msg                     
--------+-----------+------------------+--------------------------------------------
      0 |         0 | DB Scheduler     | [TESTING] Registered new background worker
      1 |         0 | DB Scheduler     | [TESTING] Wait until 25000, started at 0
(2 rows)

SELECT * FROM _timescaledb_config.bgw_job where id=:scheduled_index_job_id;
  id  |       application_name        |    job_type     | schedule_interval | max_runtime | max_retries | retry_period 
------+-------------------------------+-----------------+-------------------+-------------+-------------+--------------
 1000 | ScheduledIndex Background Job | scheduled_index | @ 4 days          | @ 0         |          -1 | @ 1 day
(1 row)

-- job ran once, successfully
SELECT job_id, next_start, last_finish as until_next, last_run_success, total_runs, total_successes, total_failures, total_crashes
    FROM _timescaledb_internal.bgw_job_stat
    where job_id=:scheduled_index_job_id;
 job_id |          next_start          |          until_next          | last_run_success | total_runs | total_successes | total_failures | total_crashes 
--------+------------------------------+------------------------------+------------------+------------+-----------------+----------------+---------------
   1000 | Fri Dec 31 16:00:00 1999 PST | Fri Dec 31 16:00:00 1999 PST | t                |          1 |               1 |              0 |             0
(1 row)

-- first chunk scheduled_indexed
SELECT * FROM test.show_indexes('test_scheduled_index_table');
                Index                | Columns | Expr | Unique | Primary | Exclusion | Tablespace 
-------------------------------------+---------+------+--------+---------+-----------+------------
 test_scheduled_index_table_time_idx | {time}  |      | f      | f       | f         | 
(1 row)

SELECT * FROM test.show_indexesp('_timescaledb_internal._hyper%_chunk');
                 Table                  |                                   Index                                    | Columns | Expr | Unique | Primary | Exclusion | Tablespace 
----------------------------------------+----------------------------------------------------------------------------+---------+------+--------+---------+-----------+------------
 _timescaledb_internal._hyper_1_1_chunk | _timescaledb_internal._hyper_1_1_chunk_test_scheduled_index_table_time_idx | {time}  |      | f      | f       | f         | 
(1 row)

-- second call to scheduler should immediately run scheduled_index again, due to catchup
SELECT ts_bgw_db_scheduler_test_run_and_wait_for_scheduler_finish(25, 25);
 ts_bgw_db_scheduler_test_run_and_wait_for_scheduler_finish 
------------------------------------------------------------
 
(1 row)

SELECT * FROM sorted_bgw_log;
 msg_no | mock_time | application_name |                     msg                      
--------+-----------+------------------+----------------------------------------------
      0 |         0 | DB Scheduler     | [TESTING] Registered new background worker
      1 |         0 | DB Scheduler     | [TESTING] Wait until 25000, started at 0
      0 |     25000 | DB Scheduler     | [TESTING] Registered new background worker
      1 |     25000 | DB Scheduler     | [TESTING] Wait until 50000, started at 25000
(4 rows)

SELECT * FROM _timescaledb_config.bgw_job where id=:scheduled_index_job_id;
  id  |       application_name        |    job_type     | schedule_interval | max_runtime | max_retries | retry_period 
------+-------------------------------+-----------------+-------------------+-------------+-------------+--------------
 1000 | ScheduledIndex Background Job | scheduled_index | @ 4 days          | @ 0         |          -1 | @ 1 day
(1 row)

-- two runs
SELECT job_id, next_start, last_finish as until_next, last_run_success, total_runs, total_successes, total_failures, total_crashes
    FROM _timescaledb_internal.bgw_job_stat
    where job_id=:scheduled_index_job_id;
 job_id |            next_start            |            until_next            | last_run_success | total_runs | total_successes | total_failures | total_crashes 
--------+----------------------------------+----------------------------------+------------------+------------+-----------------+----------------+---------------
   1000 | Fri Dec 31 16:00:00.025 1999 PST | Fri Dec 31 16:00:00.025 1999 PST | t                |          2 |               2 |              0 |             0
(1 row)

-- two chunks have indicies
SELECT * FROM test.show_indexes('test_scheduled_index_table');
                Index                | Columns | Expr | Unique | Primary | Exclusion | Tablespace 
-------------------------------------+---------+------+--------+---------+-----------+------------
 test_scheduled_index_table_time_idx | {time}  |      | f      | f       | f         | 
(1 row)

SELECT * FROM test.show_indexesp('_timescaledb_internal._hyper%_chunk');
                 Table                  |                                   Index                                    | Columns | Expr | Unique | Primary | Exclusion | Tablespace 
----------------------------------------+----------------------------------------------------------------------------+---------+------+--------+---------+-----------+------------
 _timescaledb_internal._hyper_1_1_chunk | _timescaledb_internal._hyper_1_1_chunk_test_scheduled_index_table_time_idx | {time}  |      | f      | f       | f         | 
 _timescaledb_internal._hyper_1_2_chunk | _timescaledb_internal._hyper_1_2_chunk_test_scheduled_index_table_time_idx | {time}  |      | f      | f       | f         | 
(2 rows)

-- third call to scheduler should immediately run scheduled_index again, due to catchup
SELECT ts_bgw_db_scheduler_test_run_and_wait_for_scheduler_finish(50, 50);
 ts_bgw_db_scheduler_test_run_and_wait_for_scheduler_finish 
------------------------------------------------------------
 
(1 row)

-- job info is gone
SELECT * FROM sorted_bgw_log;
 msg_no | mock_time | application_name |                      msg                      
--------+-----------+------------------+-----------------------------------------------
      0 |         0 | DB Scheduler     | [TESTING] Registered new background worker
      1 |         0 | DB Scheduler     | [TESTING] Wait until 25000, started at 0
      0 |     25000 | DB Scheduler     | [TESTING] Registered new background worker
      1 |     25000 | DB Scheduler     | [TESTING] Wait until 50000, started at 25000
      0 |     50000 | DB Scheduler     | [TESTING] Registered new background worker
      1 |     50000 | DB Scheduler     | [TESTING] Wait until 100000, started at 50000
(6 rows)

SELECT * FROM _timescaledb_config.bgw_job where id=:scheduled_index_job_id;
  id  |       application_name        |    job_type     | schedule_interval | max_runtime | max_retries | retry_period 
------+-------------------------------+-----------------+-------------------+-------------+-------------+--------------
 1000 | ScheduledIndex Background Job | scheduled_index | @ 4 days          | @ 0         |          -1 | @ 1 day
(1 row)

SELECT *
    FROM _timescaledb_internal.bgw_job_stat
    where job_id=:scheduled_index_job_id;
 job_id |           last_start            |           last_finish           |           next_start            | last_run_success | total_runs | total_duration | total_successes | total_failures | total_crashes | consecutive_failures | consecutive_crashes 
--------+---------------------------------+---------------------------------+---------------------------------+------------------+------------+----------------+-----------------+----------------+---------------+----------------------+---------------------
   1000 | Fri Dec 31 16:00:00.05 1999 PST | Fri Dec 31 16:00:00.05 1999 PST | Tue Jan 04 16:00:00.05 2000 PST | t                |          3 | @ 0            |               3 |              0 |             0 |                    0 |                   0
(1 row)

-- three chunks have indicies
SELECT * FROM test.show_indexes('test_scheduled_index_table');
                Index                | Columns | Expr | Unique | Primary | Exclusion | Tablespace 
-------------------------------------+---------+------+--------+---------+-----------+------------
 test_scheduled_index_table_time_idx | {time}  |      | f      | f       | f         | 
(1 row)

SELECT * FROM test.show_indexesp('_timescaledb_internal._hyper%_chunk');
                 Table                  |                                   Index                                    | Columns | Expr | Unique | Primary | Exclusion | Tablespace 
----------------------------------------+----------------------------------------------------------------------------+---------+------+--------+---------+-----------+------------
 _timescaledb_internal._hyper_1_1_chunk | _timescaledb_internal._hyper_1_1_chunk_test_scheduled_index_table_time_idx | {time}  |      | f      | f       | f         | 
 _timescaledb_internal._hyper_1_2_chunk | _timescaledb_internal._hyper_1_2_chunk_test_scheduled_index_table_time_idx | {time}  |      | f      | f       | f         | 
 _timescaledb_internal._hyper_1_3_chunk | _timescaledb_internal._hyper_1_3_chunk_test_scheduled_index_table_time_idx | {time}  |      | f      | f       | f         | 
(3 rows)

-- running is a nop
SELECT ts_bgw_db_scheduler_test_run_and_wait_for_scheduler_finish(100, 100);
 ts_bgw_db_scheduler_test_run_and_wait_for_scheduler_finish 
------------------------------------------------------------
 
(1 row)

SELECT * FROM sorted_bgw_log;
 msg_no | mock_time | application_name |                      msg                       
--------+-----------+------------------+------------------------------------------------
      0 |         0 | DB Scheduler     | [TESTING] Registered new background worker
      1 |         0 | DB Scheduler     | [TESTING] Wait until 25000, started at 0
      0 |     25000 | DB Scheduler     | [TESTING] Registered new background worker
      1 |     25000 | DB Scheduler     | [TESTING] Wait until 50000, started at 25000
      0 |     50000 | DB Scheduler     | [TESTING] Registered new background worker
      1 |     50000 | DB Scheduler     | [TESTING] Wait until 100000, started at 50000
      0 |    100000 | DB Scheduler     | [TESTING] Wait until 200000, started at 100000
(7 rows)

SELECT * FROM _timescaledb_config.bgw_job where id=:scheduled_index_job_id;
  id  |       application_name        |    job_type     | schedule_interval | max_runtime | max_retries | retry_period 
------+-------------------------------+-----------------+-------------------+-------------+-------------+--------------
 1000 | ScheduledIndex Background Job | scheduled_index | @ 4 days          | @ 0         |          -1 | @ 1 day
(1 row)

SELECT *
    FROM _timescaledb_internal.bgw_job_stat
    where job_id=:scheduled_index_job_id;
 job_id |           last_start            |           last_finish           |           next_start            | last_run_success | total_runs | total_duration | total_successes | total_failures | total_crashes | consecutive_failures | consecutive_crashes 
--------+---------------------------------+---------------------------------+---------------------------------+------------------+------------+----------------+-----------------+----------------+---------------+----------------------+---------------------
   1000 | Fri Dec 31 16:00:00.05 1999 PST | Fri Dec 31 16:00:00.05 1999 PST | Tue Jan 04 16:00:00.05 2000 PST | t                |          3 | @ 0            |               3 |              0 |             0 |                    0 |                   0
(1 row)

-- still only 3 chunks have indicies
SELECT * FROM test.show_indexes('test_scheduled_index_table');
                Index                | Columns | Expr | Unique | Primary | Exclusion | Tablespace 
-------------------------------------+---------+------+--------+---------+-----------+------------
 test_scheduled_index_table_time_idx | {time}  |      | f      | f       | f         | 
(1 row)

SELECT * FROM test.show_indexesp('_timescaledb_internal._hyper%_chunk');
                 Table                  |                                   Index                                    | Columns | Expr | Unique | Primary | Exclusion | Tablespace 
----------------------------------------+----------------------------------------------------------------------------+---------+------+--------+---------+-----------+------------
 _timescaledb_internal._hyper_1_1_chunk | _timescaledb_internal._hyper_1_1_chunk_test_scheduled_index_table_time_idx | {time}  |      | f      | f       | f         | 
 _timescaledb_internal._hyper_1_2_chunk | _timescaledb_internal._hyper_1_2_chunk_test_scheduled_index_table_time_idx | {time}  |      | f      | f       | f         | 
 _timescaledb_internal._hyper_1_3_chunk | _timescaledb_internal._hyper_1_3_chunk_test_scheduled_index_table_time_idx | {time}  |      | f      | f       | f         | 
(3 rows)

--check that views work correctly
SELECT * FROM timescaledb_information.scheduled_index_policies;
         hypertable         |        hypertable_index_name        | job_id | schedule_interval | max_runtime | max_retries | retry_period 
----------------------------+-------------------------------------+--------+-------------------+-------------+-------------+--------------
 test_scheduled_index_table | test_scheduled_index_table_time_idx |   1000 | @ 4 days          | @ 0         |          -1 | @ 1 day
(1 row)

SELECT * FROM timescaledb_information.policy_stats;
         hypertable         | job_id |    job_type     | last_run_success |           last_finish           |           last_start            |           next_start            | total_runs | total_failures 
----------------------------+--------+-----------------+------------------+---------------------------------+---------------------------------+---------------------------------+------------+----------------
 test_scheduled_index_table |   1000 | scheduled_index | t                | Fri Dec 31 16:00:00.05 1999 PST | Fri Dec 31 16:00:00.05 1999 PST | Tue Jan 04 16:00:00.05 2000 PST |          3 |              0
(1 row)

-- test deleting the policy
DROP INDEX test_scheduled_index_table_time_idx;
select * from _timescaledb_config.bgw_policy_scheduled_index where job_id=:scheduled_index_job_id;
 job_id | hypertable_id |        hypertable_index_name        
--------+---------------+-------------------------------------
   1000 |             1 | test_scheduled_index_table_time_idx
(1 row)

SELECT * FROM _timescaledb_config.bgw_job where id=:scheduled_index_job_id;
 id | application_name | job_type | schedule_interval | max_runtime | max_retries | retry_period 
----+------------------+----------+-------------------+-------------+-------------+--------------
(0 rows)

SELECT job_id, next_start, last_finish as until_next, last_run_success, total_runs, total_successes, total_failures, total_crashes
    FROM _timescaledb_internal.bgw_job_stat
    where job_id=:scheduled_index_job_id;
 job_id | next_start | until_next | last_run_success | total_runs | total_successes | total_failures | total_crashes 
--------+------------+------------+------------------+------------+-----------------+----------------+---------------
(0 rows)

SELECT ts_bgw_db_scheduler_test_run_and_wait_for_scheduler_finish(125, 125);
 ts_bgw_db_scheduler_test_run_and_wait_for_scheduler_finish 
------------------------------------------------------------
 
(1 row)

SELECT * FROM sorted_bgw_log;
 msg_no | mock_time | application_name |                      msg                       
--------+-----------+------------------+------------------------------------------------
      0 |         0 | DB Scheduler     | [TESTING] Registered new background worker
      1 |         0 | DB Scheduler     | [TESTING] Wait until 25000, started at 0
      0 |     25000 | DB Scheduler     | [TESTING] Registered new background worker
      1 |     25000 | DB Scheduler     | [TESTING] Wait until 50000, started at 25000
      0 |     50000 | DB Scheduler     | [TESTING] Registered new background worker
      1 |     50000 | DB Scheduler     | [TESTING] Wait until 100000, started at 50000
      0 |    100000 | DB Scheduler     | [TESTING] Wait until 200000, started at 100000
      0 |    200000 | DB Scheduler     | [TESTING] Wait until 325000, started at 200000
(8 rows)

SELECT * FROM _timescaledb_config.bgw_job where id=:scheduled_index_job_id;
 id | application_name | job_type | schedule_interval | max_runtime | max_retries | retry_period 
----+------------------+----------+-------------------+-------------+-------------+--------------
(0 rows)

-- no indexes
SELECT * FROM test.show_indexes('test_scheduled_index_table');
 Index | Columns | Expr | Unique | Primary | Exclusion | Tablespace 
-------+---------+------+--------+---------+-----------+------------
(0 rows)

SELECT * FROM test.show_indexesp('_timescaledb_internal._hyper%_chunk');
 Table | Index | Columns | Expr | Unique | Primary | Exclusion | Tablespace 
-------+-------+---------+------+--------+---------+-----------+------------
(0 rows)

SELECT * FROM _timescaledb_catalog.optional_index_info;
 hypertable_index_name | is_scheduled 
-----------------------+--------------
(0 rows)

\c :TEST_DBNAME :ROLE_SUPERUSER
TRUNCATE bgw_log;
TRUNCATE _timescaledb_internal.bgw_job_stat;
DELETE FROM _timescaledb_config.bgw_job;
SELECT ts_bgw_params_reset_time();
 ts_bgw_params_reset_time 
--------------------------
 
(1 row)

\c :TEST_DBNAME :ROLE_DEFAULT_PERM_USER
